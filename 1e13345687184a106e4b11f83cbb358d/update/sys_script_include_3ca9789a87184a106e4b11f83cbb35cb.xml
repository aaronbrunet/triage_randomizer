<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_snc_randomizer.RandomizerUtil</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description/>
        <name>RandomizerUtil</name>
        <script><![CDATA[var RandomizerUtil = Class.create();
RandomizerUtil.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
	getConstants: function(){
		const constants = {};
		constants.POOL_TABLE = 'x_snc_randomizer_pool';
		constants.RUNS_TABLE = 'x_snc_randomizer_runs';

		return constants;
	},
	getRand: function(length){
		var max = length;// +1;
		return Math.floor(Math.random() * max);
	},
	getPool: function(){
		var constants = this.getConstants();
		var list = new GlideRecord(constants.POOL_TABLE);
		list.orderBy('name');
		var pool = [];
		list.query();
		while(list.next()){
			pool.push({name:list.getValue('name'),value:list.getValue('value'),sys_id:list.getUniqueValue(),last_picked:list.getValue('last_picked')});
		}
		return pool;
	},
	getResult: function(query){
		var length = 0;
		var constants = this.getConstants();
		var result = {
			name: '',
			value: '',
			sys_id: ''
		};
		
		var res = new GlideRecord(constants.POOL_TABLE);
		if(query && query != ''){
			res.addEncodedQuery(query);
		}
		res.query();
		length = res.getRowCount();
		var rand = this.getRand(length);
		//gs.info(['Rand: '+rand,'Length: '+length,'Query: '+query]);
		var i = 0;
		while(res.next()){
			//gs.info(['i: '+i,'Rand: '+rand,'Name at i: '+res.getValue('name')]);
			if(i == rand){
				//gs.info('Picked '+ res.getValue('name') + ' for rand ' + rand);
				// this.setLastPicked(res.getValue('value'));
				result.name = res.getValue('name');
				result.value = res.getValue('value');
				result.sys_id = res.getUniqueValue();
				result.last_picked = res.getValue('last_picked');
				return result;
			}
			else {
				i++;
			}
		}
	},
	getLastPicked: function(){
		var constants = this.getConstants();
		var result = {
			name: '',
			value: ''
		};
		
		var last_picked = new GlideRecord(constants.POOL_TABLE);
		last_picked.get('last_picked',true);
		result.name = last_picked.getValue('name');
		result.value = last_picked.getValue('value');
		result.sys_id = last_picked.getUniqueValue();
		return result;
	},
	setLastPicked: function(pickID){
		var constants = this.getConstants();
		var pick = new GlideRecord(constants.POOL_TABLE);

		pick.get('value',pickID);
		if(pick){
			var lastPicked = new GlideRecord(constants.POOL_TABLE);
			lastPicked.get('last_picked',true);
			gs.info('Found last picked: ' + lastPicked.getValue('name'));
			if(lastPicked.getUniqueValue() != -1 && lastPicked.getUniqueValue() != pick.getUniqueValue()){
				lastPicked.setValue('last_picked',false);
				lastPicked.update();
			}
			pick.setValue('last_picked',true);
			pick.update();
		}
	},
	getRunHistory(count){
		var constants = this.getConstants();
		
		var runs_list = [];
		
		var runs = new GlideRecord(constants.RUNS_TABLE);
		runs.orderByDesc('sys_created_on');
		if(count && count > 0){
			runs.setLimit(count);
		}else{
			runs.setLimit(10);
		}
		runs.query();
		while(runs.next()){
			var run = {
				result:runs.getDisplayValue('result'),
				time:runs.getDisplayValue('sys_created_on')
			};
			runs_list.push(run);
		}
		return runs_list;
	},
    type: 'RandomizerUtil'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>aaron.brunet@snc</sys_created_by>
        <sys_created_on>2024-02-13 18:44:58</sys_created_on>
        <sys_id>3ca9789a87184a106e4b11f83cbb35cb</sys_id>
        <sys_mod_count>33</sys_mod_count>
        <sys_name>RandomizerUtil</sys_name>
        <sys_package display_value="Randomizer" source="x_snc_randomizer">1e13345687184a106e4b11f83cbb358d</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Randomizer">1e13345687184a106e4b11f83cbb358d</sys_scope>
        <sys_update_name>sys_script_include_3ca9789a87184a106e4b11f83cbb35cb</sys_update_name>
        <sys_updated_by>aaron.brunet</sys_updated_by>
        <sys_updated_on>2024-02-26 20:04:17</sys_updated_on>
    </sys_script_include>
</record_update>
