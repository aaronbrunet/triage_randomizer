<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller=function($scope,spUtil,$window,$timeout) {
  /* widget controller */
//define
  var c = this;
  c.include_last_picked = false;
  c.include_alain = false;
  //c.data.result_list = [];
  c.data.loading = false;
c.data.toggle_pool = false;
c.exclude_list = [];
c.exclude_list_ids = [];
c.exclude_list_ids_str = '';
c.include_list = c.data.pool;
c.targetDeg = 0;
var alain = c.data.pool.find(e => e.name == 'Alain Phalip');
var last_picked = c.data.pool.find(e => e.last_picked == true);

resetVars = function(){
	c.exclude_list = [];
	c.exclude_list_ids = [];
	c.exclude_list_ids_str = '';
	alain = c.data.pool.find(e => e.name == 'Alain Phalip');
	last_picked = c.data.pool.find(e => e.last_picked == true);
}

//calculate and set rotation of all items on wheel
calcSlice = function(){	
	var slice_arr = $window.document.querySelectorAll('.r-slice');
	// if(slice_arr.length < 0 || slice_arr.length < c.include_list.length){

	//sometimes it runs before the HTML is done being built, so just give it a sec	
	if(slice_arr.length < 0 || slice_arr.length < c.data.pool.length){
		console.log("Let's try again");
		$timeout(function(){ 
			calcSlice();
		}, 150);
		return;
	}

	var slice_size = 360/c.data.pool.length;//360/slice_arr.length;

	//console.log(slice_arr);
	//loop through the elements and set rotational degree - show all pool items, as dynamically removing means nothing to point to later
	for(var i = 0; i<slice_arr.length; i++){
		//console.log(slice_arr[i]);
		var s_num = i * slice_size;
		var s = document.getElementById(slice_arr[i].id);
		// console.log(s);
		var css_deg = 'rotate('+s_num+'deg) translateX(10rem)';
		slice_arr[i].style.transform = css_deg; 
		
		// console.log(css_deg);
	}
	//console.log(slice_arr);
}

//when the wheel needs to be rotated to a specific spot
$scope.rotateSlice = function(targetIdx){
	var w = $window.document.getElementById("wheel");
	w.style.transform = 'rotate(0deg)';
	//start spin that goes for 3s
	w.classList.add('spin');
	$timeout(function(){ 
		console.log('waiting');
		//wait a hair over 3s for the animation to end
	}, 3050).then(function(e){
		w.classList.remove('spin');
		//calculate target
		var slices = c.data.pool.length;
		var deg = 360/slices;
		var targetDeg = 360 - (deg * targetIdx);
		var klass = 'rotate('+targetDeg+'deg)';
		w.style.transform = klass;		
	});
}

$scope.togglePool = function(){
	c.data.toggle_pool = !c.data.toggle_pool;
}

//adding or removing items from pool
$scope.toggleExclude = function(data){

	//build exclude list
	if(c.exclude_list.some(e => e.sys_id == data.sys_id)){
		var tmp_arr = c.exclude_list.filter(e => e.sys_id != data.sys_id);	
		c.exclude_list = tmp_arr.slice();
	} else {
		c.exclude_list.push(data);
	}
	
	if(data == alain){
		//toggle alain switch
		c.include_alain = !c.include_alain;
	}
	if(data.last_picked == true){
		//toggle picked switch
		c.include_last_picked = !c.include_last_picked;
	}
	//sys_ids used for easier querying
	c.exclude_list_ids = c.exclude_list.map(p => p.sys_id);

	//easier than bass ackwards
	c.include_list = c.data.pool.filter(e => !c.exclude_list_ids.includes(e.sys_id));
	//build enc query
	c.exclude_list_ids_str = 'sys_idNOT IN'+c.exclude_list_ids.join();
	
	//this probably doesn't need to be here anymore 
	calcSlice();
}


$scope.toggleAlain = function(){
	if(c.include_alain){
		var tmp_arr = c.exclude_list.filter(e => e.sys_id !== alain.sys_id);
		c.exclude_list = tmp_arr.slice();
		
	} else {
		if(!c.exclude_list.some(e => e.sys_id == alain.sys_id)){
			c.exclude_list.push(alain);
		}
	}
	c.exclude_list_ids = buildIDListArr(c.exclude_list);
	c.exclude_list_ids_str = buildIDListStr(c.exclude_list_ids);
}
$scope.toggleLastPicked = function(){
	if(c.include_last_picked){
		var tmp_arr = c.exclude_list.filter(e => e.last_picked != true);
		c.exclude_list = tmp_arr.slice();
		//var tmp_arr = c.exclude_list.filter(e => e == )
		
	} else {
		if(!c.exclude_list.some(e => e.sys_id == last_picked.sys_id)){
			c.exclude_list.push(last_picked);
		}
		
	}
	c.exclude_list_ids = buildIDListArr(c.exclude_list);
	c.exclude_list_ids_str = buildIDListStr(c.exclude_list_ids);
}

$scope.getRand = function(){
	c.data.rand = true;
	spUtil.update($scope);
};

  $scope.getResult = function(){
	c.data.roll = true;
	c.data.exclude_list = c.exclude_list_ids_str;
	c.data.query = c.include_last_picked;
	c.data.alain = c.include_alain;
	c.data.loading = true;
	c.server.update().then(function(e){
		var targetIdx = c.data.pool.findIndex(e => e.sys_id == c.data.result.sys_id);
		console.log('parent targetIdx: '+targetIdx)
		$scope.rotateSlice(targetIdx);
			
		$timeout(function(){ 
			console.log('inner');
			
		},5000).then(function(e){
			console.log('then');
			c.data.loading = false;
		});	
			
		// }, 500).then(function(e){
			
			//c.data.result_list.push({name:c.data.result.name,value:c.data.result.value});
			alain = c.data.pool.find(e => e.name == 'Alain Phalip');
			last_picked = c.data.pool.find(e => e.last_picked == true);
			loadSetup();
		// });
	});

  }; 

  $scope.addExclude = function(data){
	c.data.exclude = data;
	c.server.update();
  }
  $scope.getResultLucky = function(){
	c.data.roll = true;
	if(c.include_last_picked == true){
		c.data.query = true;
	}
	c.server.update().then(function(e){
		//c.data.result_list.push({name:c.data.result.name,value:c.data.result.value});
		//console.log(c.data);
		window.open("https://support.servicenow.com/sys_user.do?sys_id="+c.data.result.value);
	});

  };
	buildIDListArr = function(arr){
		return arr.map(p => p.sys_id);
	}
	buildIDListStr = function(arr){
		return 'sys_idNOT IN'+arr.join();
	}
	loadSetup = function(){
		if(!c.include_alain && !c.exclude_list.some(e => e.sys_id == alain.sys_id)){
			c.exclude_list.push(alain);
		}
		if(!c.include_last_picked && !c.exclude_list.some(e => e.sys_id == last_picked.sys_id)){
			c.exclude_list.push(last_picked);
		}
		if(c.data.result && !c.exclude_list.some(e => e.sys_id == c.data.result.sys_id)){
			c.exclude_list.push(c.data.result)
		}
		c.exclude_list_ids = buildIDListArr(c.exclude_list);
		c.exclude_list_ids_str = buildIDListStr(c.exclude_list_ids);
		c.include_list = c.data.pool.filter(e => !c.exclude_list_ids.includes(e.sys_id));
		console.log('first time load');
		calcSlice();
	}
  loadSetup();
  $window.addEventListener('load',function() {
    // handle load event
	calcSlice();
  });
};]]></client_script>
        <controller_as>c</controller_as>
        <css>.title {&#13;
	text-align: center;&#13;
}&#13;
&#13;
.card {&#13;
  display: flex;&#13;
  flex-direction: column;&#13;
  &#13;
  background-color: white;&#13;
  width: 80%;&#13;
  margin: auto;&#13;
  padding: 2rem;&#13;
  &#13;
  text-align: center;&#13;
  box-shadow: 0 0.2rem 1rem 0 rgba(0, 0, 0, .1);&#13;
  border: none;&#13;
  border-radius: 2rem;&#13;
  &#13;
  margin-bottom: 3rem;&#13;
}&#13;
&#13;
.pool {&#13;
&#13;
}&#13;
.pointer {&#13;
	width: 5rem;&#13;
  height: 5rem;&#13;
  border-radius: 50% 50% 50% 0;&#13;
  background-color: blue;&#13;
  &#13;
  z-index: 9;&#13;
    display: block;&#13;
    align-self: center;&#13;
    position: relative;&#13;
    bottom: -2rem;&#13;
    transform: rotate(315deg);&#13;
}&#13;
.wheelhouse {&#13;
	position: relative;&#13;
  	width: 40rem;&#13;
    margin: auto;&#13;
   	display: flex;&#13;
    align-items: center;&#13;
    justify-content: center;&#13;
}&#13;
.wheel {&#13;
  	background: red;&#13;
  	width: 40rem;&#13;
  	height: 40rem;&#13;
    border-radius: 100%;&#13;
  	display: flex;&#13;
    justify-content: center;&#13;
    align-items: center;&#13;
	transition: 1s ease-out;&#13;
}&#13;
.wheel_center {&#13;
	width: 5rem;&#13;
  height: 5rem;&#13;
  border-radius: 100%;&#13;
  background-color: green;&#13;
  position: absolute;&#13;
}&#13;
.slices {&#13;
  width: 40rem;&#13;
  height: 40rem;&#13;
  align-items: center;&#13;
  display: flex;&#13;
  justify-content: center;&#13;
  transform: rotate(270deg);&#13;
  &#13;
}&#13;
&#13;
.spin {&#13;
	animation: spin 1s infinite linear;&#13;
    animation-iteration-count: 3;&#13;
}&#13;
&#13;
.r-slice {&#13;
  display: block;&#13;
  transform-origin: center;&#13;
  position: absolute;&#13;
  width: 20rem;&#13;
  max-width: 20rem;&#13;
  color: black;&#13;
  text-align: center;&#13;
  &#13;
  font-weight: bold;&#13;
}&#13;
&#13;
ul, li {&#13;
	list-style: none;&#13;
    padding: 0;&#13;
}&#13;
ul {&#13;
	padding: 0 3rem;&#13;
    width: 60%;&#13;
    margin: auto;&#13;
}&#13;
li {&#13;
	text-align: left;&#13;
    padding: 0 3rem;&#13;
}&#13;
&#13;
.deselect {&#13;
opacity: .5;&#13;
}&#13;
&#13;
button {&#13;
/* border: 1px solid grey;&#13;
  border-radius: 1rem;&#13;
  padding: .5rem;&#13;
  */&#13;
  margin: 0 1rem;&#13;
}&#13;
&#13;
.block {&#13;
	display: block;&#13;
  margin: 1rem;&#13;
  padding: .5rem;&#13;
  input {&#13;
  	margin: .5rem;&#13;
  }&#13;
}&#13;
&#13;
.result {&#13;
 animation: emph 1s infinite ease-in-out;&#13;
  transition: 0s;&#13;
}&#13;
@keyframes emph {&#13;
  0% {&#13;
    transform: scale(1);&#13;
  }&#13;
  50% {&#13;
    transform: scale(1.3)&#13;
  }&#13;
  100% {&#13;
    transform: scale(1);&#13;
  }&#13;
}&#13;
&#13;
@keyframes spin {&#13;
  0% {&#13;
  	transform: rotate(0deg);&#13;
  }&#13;
  50% {&#13;
  	transform: rotate(180deg);&#13;
  }&#13;
  100% {&#13;
  	transform: rotate(360deg);&#13;
  }&#13;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>t_randomizer</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
  
}]]></link>
        <name>Randomizer</name>
        <option_schema/>
        <public>true</public>
        <roles/>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */

var rsi = new x_snc_randomizer.RandomizerUtil();
var constants = rsi.getConstants();
data.button_text = "Pick Victim";
data.constants = constants;

data.pool = rsi.getPool();

data.last_picked = rsi.getLastPicked();
data.exclude_list = [];

if(input && input.roll){
	data.result = {};
	data.loading = true;
	data.query_str = input.exclude_list;
	data.result = rsi.getResult(data.query_str);
	data.button_text = "Pick Again";
	data.pool = rsi.getPool();
	data.last_picked = rsi.getLastPicked();

	var run = new GlideRecord(constants.RUNS_TABLE);
	run.initialize();
	run.result = data.result.sys_id;
	run.insert();
};

if(input && input.exclude){
	data.exclude_list.push(input.exclude);
	var newPool = data.pool.filter(e => e.value != input.exclude.value);
	data.pool = newPool.slice();
}
data.result_list = rsi.getRunHistory(5);
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>aaron.brunet@snc</sys_created_by>
        <sys_created_on>2024-02-13 19:03:09</sys_created_on>
        <sys_id>126e349e87184a106e4b11f83cbb3504</sys_id>
        <sys_mod_count>307</sys_mod_count>
        <sys_name>Randomizer</sys_name>
        <sys_package display_value="Randomizer" source="x_snc_randomizer">1e13345687184a106e4b11f83cbb358d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Randomizer">1e13345687184a106e4b11f83cbb358d</sys_scope>
        <sys_update_name>sp_widget_126e349e87184a106e4b11f83cbb3504</sys_update_name>
        <sys_updated_by>aaron.brunet</sys_updated_by>
        <sys_updated_on>2024-02-27 04:22:37</sys_updated_on>
        <template><![CDATA[<div class="body">
  
  <div class="card">
    <div class="title">
    	<h1>Triage Roulette</h1>
  	</div>
    
    <h3>Last Picked: <b>{{data.last_picked.name}}</b></h3>

  <div class="pool">
    <h3>Pool <button ng-click="togglePool()">{{c.data.toggle_pool == true ? '-' : '+'}}</button></h3>
    <ul ng-if="c.data.toggle_pool">
      <li ng-repeat="p in data.pool" class="{{c.exclude_list_ids.includes(p.sys_id) ? 'deselect' : ''}}">
		<button ng-click="toggleExclude(p)">[{{c.exclude_list_ids.includes(p.sys_id) ? '+' : 'x'}}]</button> 
		{{p.name}}
        <span ng-if="p.last_picked == true">(Last Picked)</span>
	  </li>
    </ul>
  </div>
	
<!--
  <div ng-if="data.exclude_list.length > 0">
    <h3>Exclude List</h3>
    <ul>
      <li ng-repeat="e in data.exclude_list"><button ng-click="">[+]</button> {{e.name}}</li>
    </ul>
  </div>-->
    <div class="controls">
      <div class="block">
        <input type="checkbox" ng_model="c.include_alain" ng-click="toggleAlain()"/> Include Alain?
        <!--<input type="checkbox" ng_model="c.include_last_picked" ng-click="toggleLastPicked()"/> Include last picked?-->
      </div>
        <button ng-click="getResult()" class="btn btn-primary">{{data.button_text}}</button><button ng-click="getResultLucky()" class="btn btn-secondary">I'm Feeling Lucky</button>
      </div>
      	
    <div id="pointer" class="pointer"></div>
      <div id="wheelhouse" class="wheelhouse">
        
        <div id="wheel" class="wheel">
          <div id="wheel_center" class="wheel_center">
            <div ng-repeat="l in c.data.pool">spoke</div>
          </div>
          <div id="slices" class="slices">
           <!-- <div ng-repeat="s in c.include_list track by $index" id="slice-{{$index}}" class="r-slice">{{s.name}}</div>-->
             <div ng-repeat="s in c.data.pool track by $index" id="slice-{{$index}}" class="r-slice">{{s.name}}</div>
          </div>
        </div>
    </div>
    <div class="results">
        <h2 ng-if="c.data.loading == true || !data.result || data.result.name == ''">Waiting to pick victim...</h2>
        <h2 ng-if="c.data.loading == false && data.result && data.result.name != ''">Today's Victim: <b>{{data.result.name}}</b></h2>
      </div>
  </div>
  <div ng-if="data.result_list.length > 0" class='card'>
    <h3>History</h3>
    <ul>
      <!-- <li ng-repeat="r in data.result_list"><h4>{{r.result}} ]]>🕰<![CDATA[️<sn-time-ago timestamp="::r.time"></sn-time-ago></h4></li> -->
      <li ng-repeat="r in data.result_list"><h4>{{r.result}} ]]>🕰<![CDATA[️ {{r.time}}</h4></li> 
    </ul>
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
